<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Wilderness Downtown</title><link>https://julianyap.com/posts/</link><description>Recent content in Posts on Wilderness Downtown</description><generator>Hugo</generator><language>en-us</language><copyright>Julian Yap</copyright><lastBuildDate>Mon, 03 Jun 2024 17:58:12 -0700</lastBuildDate><atom:link href="https://julianyap.com/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>The Degradation of the Cinematic Experience</title><link>https://julianyap.com/posts/2024-06-03-1717462692/</link><pubDate>Mon, 03 Jun 2024 17:58:12 -0700</pubDate><guid>https://julianyap.com/posts/2024-06-03-1717462692/</guid><description>This isn&amp;rsquo;t one of those rose-colored glasses &amp;ldquo;back in my day&amp;rdquo; feelings but a genuine technical explanation of the degradation of the cinematic experience. We focus on the topic of image resolution and the impact that has.
Growing up in the 80&amp;rsquo;s and 90&amp;rsquo;s, some of my fondest memories were of going to the cinema to watch a film for the first time on the &amp;ldquo;big screen&amp;rdquo;. It was often seen as an event, and as a family, we&amp;rsquo;d dress up to go and see The Last Emperor (is it just me or has this film been criminally buried over the years?</description></item><item><title>Tweeting images with Golang</title><link>https://julianyap.com/posts/2024-03-13-1710365831/</link><pubDate>Wed, 13 Mar 2024 14:37:11 -0700</pubDate><guid>https://julianyap.com/posts/2024-03-13-1710365831/</guid><description>Introduction X (the website formerly known as Twitter) has gone through certain &amp;ldquo;changes&amp;rdquo; in recent years. At some point they introduced the v2 API but the functionality isn&amp;rsquo;t complete.
The v1 API needs to be used for uploading media and getting the resulting media ID. We then need to use the v2 API to reference the uploaded media ID to finalize the post.
Media upload For the v1 API media upload I utilize this library: github.</description></item><item><title>Litecoin (LTC) - MimbleWimble transactions using Regtest network</title><link>https://julianyap.com/posts/2022-07-24-1658648241/</link><pubDate>Sun, 24 Jul 2022 00:37:22 -0700</pubDate><guid>https://julianyap.com/posts/2022-07-24-1658648241/</guid><description>Introduction Litecoin has implemented MimbleWimble using an Extension Blocks sidechain, commonly referred to as &amp;ldquo;MWEB&amp;rdquo;. I couldn&amp;rsquo;t find any references to using MWEB other than articles which delve more into the technology but not the day to day wallet interaction. This post utilizes the standalone private Regtest network to demonstrate the usage. There are Additional links and references at the bottom of this post if you need an overview of the technology.</description></item><item><title>First post</title><link>https://julianyap.com/posts/2022-05-15-1652658630/</link><pubDate>Sun, 15 May 2022 16:29:25 -0700</pubDate><guid>https://julianyap.com/posts/2022-05-15-1652658630/</guid><description>I&amp;rsquo;ve never liked the static site generator Jekyll (being Ruby) that comes with built-in support from GitHub. With the advent of GitHub Actions, this has allowed me to set this site up with Hugo and an auto-deployment.
Definitely not sure what content I want to put up on this site. I&amp;rsquo;ve built it and blown it up a few times.
The content creation process has been a long term concern of mine.</description></item></channel></rss>